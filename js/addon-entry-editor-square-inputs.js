(window["webpackJsonpGUI"] = window["webpackJsonpGUI"] || []).push([["addon-entry-editor-square-inputs"],{

/***/ "./src/addons/addons/custom-block-shape/update-all-blocks.js":
/*!*******************************************************************!*\
  !*** ./src/addons/addons/custom-block-shape/update-all-blocks.js ***!
  \*******************************************************************/
/*! exports provided: updateAllBlocks */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateAllBlocks", function() { return updateAllBlocks; });
function updateAllBlocks(vm, workspace, blockly) {
  const eventsOriginallyEnabled = blockly.Events.isEnabled();
  blockly.Events.disable(); // Clears workspace right-clickâ†’undo (see SA/SA#6691)

  if (workspace) {
    if (vm.editingTarget) {
      vm.emitWorkspaceUpdate();
    }
    const flyout = workspace.getFlyout();
    if (flyout) {
      const flyoutWorkspace = flyout.getWorkspace();
      window.Blockly.Xml.clearWorkspaceAndLoadFromXml(window.Blockly.Xml.workspaceToDom(flyoutWorkspace), flyoutWorkspace);
      workspace.getToolbox().refreshSelection();
      workspace.toolboxRefreshEnabled_ = true;
    }
  }

  // There's no particular reason for checking whether events were originally enabled.
  // Unconditionally enabling events at this point could, in theory, cause bugs in the future.
  if (eventsOriginallyEnabled) blockly.Events.enable(); // Re-enable events
}

/***/ }),

/***/ "./src/addons/addons/editor-square-inputs/_runtime_entry.js":
/*!******************************************************************!*\
  !*** ./src/addons/addons/editor-square-inputs/_runtime_entry.js ***!
  \******************************************************************/
/*! exports provided: resources */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resources", function() { return resources; });
/* harmony import */ var _userscript_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./userscript.js */ "./src/addons/addons/editor-square-inputs/userscript.js");
/* generated by pull.js */

const resources = {
  "userscript.js": _userscript_js__WEBPACK_IMPORTED_MODULE_0__["default"]
};

/***/ }),

/***/ "./src/addons/addons/editor-square-inputs/userscript.js":
/*!**************************************************************!*\
  !*** ./src/addons/addons/editor-square-inputs/userscript.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _custom_block_shape_update_all_blocks_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../custom-block-shape/update-all-blocks.js */ "./src/addons/addons/custom-block-shape/update-all-blocks.js");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

/* harmony default export */ __webpack_exports__["default"] = (async function (_ref) {
  let {
    addon
  } = _ref;
  const ScratchBlocks = await addon.tab.traps.getBlockly();
  const vm = addon.tab.traps.vm;
  const opcodeToSettings = {
    text: "text",
    argument_editor_string_number: "text",
    math_number: "number",
    math_integer: "number",
    math_whole_number: "number",
    math_positive_number: "number",
    math_angle: "number",
    note: "number",
    colour_picker: "color"
  };
  const originalJsonInit = ScratchBlocks.BlockSvg.prototype.jsonInit;
  ScratchBlocks.BlockSvg.prototype.jsonInit = function (json) {
    if (!addon.self.disabled && opcodeToSettings[this.type] && addon.settings.get(opcodeToSettings[this.type])) {
      originalJsonInit.call(this, _objectSpread(_objectSpread({}, json), {}, {
        outputShape: ScratchBlocks.OUTPUT_SHAPE_SQUARE
      }));
    } else {
      originalJsonInit.call(this, json);
    }
  };
  function update() {
    Object(_custom_block_shape_update_all_blocks_js__WEBPACK_IMPORTED_MODULE_0__["updateAllBlocks"])(vm, addon.tab.traps.getWorkspace(), ScratchBlocks);
  }
  addon.self.addEventListener("disabled", update);
  addon.self.addEventListener("reenabled", update);
  addon.settings.addEventListener("change", update);
  update();
});

/***/ })

}]);
//# sourceMappingURL=addon-entry-editor-square-inputs.js.map